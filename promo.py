# -*- coding: utf-8 -*-
from get_conn import create_connection
from logger import logger
import mysql.connector
import get_conn
from datetime import datetime, timedelta

sql_check_promo_code = """
SELECT period, used, create_date FROM promo_codes 
WHERE code = %s
"""

sql_procrochka = '''
DELETE FROM promo_codes WHERE create_date < DATE_SUB(CURDATE(), INTERVAL 3 DAY)'''

sql_delete_used_promo = '''
DELETE FROM promo_codes WHERE used = 1'''

sql_update_promo_code = """
UPDATE promo_codes
SET used = TRUE,
user_id = %s
WHERE code = %s
"""

sql_get_sub_info = """
SELECT stop_date, is_active
FROM subscriptions
WHERE user_id = %s
ORDER BY stop_date DESC
LIMIT 1
"""

sql_check_promo_codes = "SELECT * FROM promo_codes WHERE code = %s"

sql_new_promo_code = """
INSERT INTO promo_codes (code, period)
VALUES (%s, %s)
"""


def check_promo_code(promo_code):
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–º–æ–∫–æ–¥–µ
    try:
        result = get_conn.execute_query(sql_check_promo_code, (promo_code,))
        if not result:
            return False, "–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω"  # –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω
        period, used, create_date = result[0]
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è (–Ω–µ –±–æ–ª–µ–µ 3 –¥–Ω–µ–π)
        current_date = datetime.now()
        if (current_date - create_date).days > 3:
            return False, "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∏—Å—Ç–µ–∫"  # –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∏—Å—Ç–µ–∫
        if used == 1:
            return False, "–ü—Ä–æ–º–æ–∫–æ–¥ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω"  # –ü—Ä–æ–º–æ–∫–æ–¥ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω
        return True, period
    except Exception as e:
        logger.error(f'ERROR - check_promo_code - {promo_code} - {e}')
        return False, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"


def status_used_promo_code(user_id, promo_code):
    get_conn.execute_query(sql_update_promo_code, (user_id, promo_code,))


def clear_used_promo():
    get_conn.execute_query(sql_delete_used_promo)
    get_conn.execute_query(sql_procrochka)



def create_promo_code(code, period):
    result = get_conn.execute_query(sql_check_promo_codes, (code,))
    if result:
        return False, "–¢–∞–∫–æ–π –ø—Ä–æ–º–æ–∫–æ–¥ —É–∂–µ –µ—Å—Ç—å"
    get_conn.execute_query(sql_new_promo_code, (code, period))
    return True, "–ü—Ä–æ–º–æ–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω"


def generate_promo_code_report():
    # Retrieve all promo codes from the table
    sql_get_promo_info = "SELECT code, period, used, user_id FROM promo_codes"
    promo_codes = get_conn.execute_query(sql_get_promo_info)
    # Generate the report
    report = "üìä Promo Code Report üìä\n"
    for promo_code in promo_codes:
        used = promo_code[2]
        if used == 1:
            used = "–î–∞"
        else:
            used = "–ù–ï–¢"
        report += f"–ü–†–û–ú–û–ö–û–î: {promo_code[0]}\n–ü–ï–†–ò–û–î: {promo_code[1]} –î–Ω–µ–π\n–ò–°–ü–û–õ–¨–ó–û–í–ê–ù: {used}\nUser ID: {promo_code[3]}\n\n"

    return report

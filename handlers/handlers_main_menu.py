import aiogram
from aiogram import types
from aiogram.dispatcher import FSMContext
import user_data
import text
import config
from datetime import datetime, timedelta
from logger import logger
from config import dp, bot
import keyboards.keyboards
import sub

tarif_info = """üìö –ü—Ä–æ–¥—É–∫—Ç: "–û–°–ù–û–í–ê"

üóì –¢–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω: –µ–∂–µ–º–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞

üö® –û–ø–ª–∞—á–∏–≤–∞—è –ø–æ–¥–ø–∏—Å–∫—É, –í—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —É—Å–ª–æ–≤–∏—è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –∏ –ü–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏."""


# –º–æ–∏ –∫–ª—é—á–∏
@dp.message_handler(lambda message: message.text == 'üóì –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã', state='*')
async def my_keys_command(message: types.Message, state: FSMContext):
    telegram_id = message.from_user.id
    await bot.send_message(chat_id=telegram_id,
                           text=tarif_info,
                           parse_mode="HTML",
                           reply_markup=keyboards.keyboards.keyboard_period())


@dp.message_handler(lambda message: message.text == 'üóÉ –ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞', state='*')
async def my_keys_command(message: types.Message, state: FSMContext):
    telegram_id = message.from_user.id
    stop_date = sub.get_subscription_info(telegram_id)
    if stop_date:
        date_farmated = sub.format_date_string(stop_date)
        txt_my_tarif_info = sub.my_tarif_info(date_farmated)
        await bot.send_message(chat_id=telegram_id,
                               text=txt_my_tarif_info,
                               parse_mode="HTML")
    else:
        txt_my_tarif_info = sub.my_tarif_info(stop_date)
        await bot.send_message(chat_id=telegram_id,
                               text=txt_my_tarif_info,
                               parse_mode="HTML",
                               reply_markup=keyboards.keyboards.keyboard_period())


@dp.message_handler(lambda message: message.text == 'ü§ù –ü–æ–¥–¥–µ—Ä–∂–∫–∞', state='*')
async def my_keys_command(message: types.Message, state: FSMContext):
    telegram_id = message.from_user.id

    answer = f'''ü§ù –ü–æ–¥–¥–µ—Ä–∂–∫–∞

    –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É {config.support}'''

    await bot.send_message(chat_id=telegram_id,
                           text=answer,
                           parse_mode='HTML')


@dp.message_handler(lambda message: message.text == 'üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', state='*')
async def my_keys_command(message: types.Message, state: FSMContext):
    telegram_id = message.from_user.id
    count_referrals = user_data.count_referrals(telegram_id)
    if not count_referrals:
        count_referrals = 0
    user_balance = user_data.get_user_balance_bonus(telegram_id)

    sub_info = sub.get_subscription_info(telegram_id)

    if not sub_info:
        txt = text.not_ref_link(count_referrals, user_balance)
        await bot.send_message(chat_id=telegram_id,
                               text=txt,
                               parse_mode='HTML')
        return

    txt = text.ref_link(telegram_id, config.bot_name, count_referrals, user_balance)

    await bot.send_message(chat_id=telegram_id,
                           text=txt,
                           parse_mode='HTML')
